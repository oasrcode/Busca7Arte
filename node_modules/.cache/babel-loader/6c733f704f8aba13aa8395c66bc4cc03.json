{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Mis Cosas\\\\Proyectos\\\\proyectos REACT\\\\busca7arte\\\\src\\\\components\\\\Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getContent } from \"../Service/getContent\";\nimport style from \"../css/Grid.module.css\";\nimport { Card } from \"./Card\";\nimport { LoadingIcon } from \"../components/LoadingIcon\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { URLContentSelector } from \"../Service/URLContentSelector\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Grid() {\n  _s();\n\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const query = useQuery().get(\"search\");\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  useEffect(() => {\n    setIsLoading(true);\n    getContent(URLContentSelector(query, page)).then(res => {\n      let data = res.data;\n      setFilms(x => x.concat(data.results));\n      setHasMore(page < data.total_pages);\n      setIsLoading(false);\n    });\n  }, [query, page]);\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: films.length,\n    next: () => setPage(prevPage => prevPage + 1),\n    hasMore: hasMore,\n    loader: /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.Grid,\n      children: films.map((film, key) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          film: film\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Grid, \"DYJSNCzshOo7RbLG9AimZqJgSVc=\", false, function () {\n  return [useQuery];\n});\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["useEffect","useState","getContent","style","Card","LoadingIcon","useQuery","URLContentSelector","InfiniteScroll","Grid","films","setFilms","isLoading","setIsLoading","query","get","page","setPage","hasMore","setHasMore","then","res","data","x","concat","results","total_pages","length","prevPage","map","film","key"],"sources":["C:/Users/Usuario/Mis Cosas/Proyectos/proyectos REACT/busca7arte/src/components/Grid.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { getContent } from \"../Service/getContent\"\r\nimport style from \"../css/Grid.module.css\"\r\nimport { Card } from \"./Card\";\r\nimport { LoadingIcon } from \"../components/LoadingIcon\"\r\nimport { useQuery } from \"../hooks/useQuery\"\r\nimport { URLContentSelector } from \"../Service/URLContentSelector\"\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n\r\n\r\n\r\nexport function Grid() {\r\n\r\n  const [films,setFilms] = useState([]);\r\n  \r\n  const [isLoading,setIsLoading]=useState(false);\r\n\r\n  const query = useQuery().get(\"search\");\r\n\r\n  const [page,setPage] = useState(1);\r\n\r\n  const[hasMore, setHasMore]= useState(true);\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    setIsLoading(true);\r\n      getContent(URLContentSelector(query,page)).then((res) => {\r\n      let data = res.data;\r\n      setFilms((x)=>x.concat(data.results))\r\n      setHasMore(page<data.total_pages)\r\n      setIsLoading(false);\r\n      }); \r\n  },[query,page]);\r\n\r\n\r\n  \r\n \r\n\r\n\r\n  return(<InfiniteScroll\r\n  dataLength={films.length}\r\n  next={() => setPage((prevPage) => prevPage + 1)}\r\n  hasMore={hasMore}\r\n  loader={<LoadingIcon/>}>\r\n            <div className={style.Grid}>\r\n              {films.map\r\n                ((film,key)=>\r\n                  {\r\n                    return <Card key={key} film={film}/>\r\n                  }\r\n                )\r\n              }\r\n            </div>      \r\n  </InfiniteScroll>)\r\n      \r\n  \r\n\r\n\r\n\r\n       \r\n\r\n}\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAKA,OAAO,SAASC,IAAT,GAAgB;EAAA;;EAErB,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;EAEA,MAAM,CAACW,SAAD,EAAWC,YAAX,IAAyBZ,QAAQ,CAAC,KAAD,CAAvC;EAEA,MAAMa,KAAK,GAAGR,QAAQ,GAAGS,GAAX,CAAe,QAAf,CAAd;EAEA,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBhB,QAAQ,CAAC,CAAD,CAA/B;EAEA,MAAK,CAACiB,OAAD,EAAUC,UAAV,IAAuBlB,QAAQ,CAAC,IAAD,CAApC;EAIAD,SAAS,CAAC,MAAI;IACZa,YAAY,CAAC,IAAD,CAAZ;IACEX,UAAU,CAACK,kBAAkB,CAACO,KAAD,EAAOE,IAAP,CAAnB,CAAV,CAA2CI,IAA3C,CAAiDC,GAAD,IAAS;MACzD,IAAIC,IAAI,GAAGD,GAAG,CAACC,IAAf;MACAX,QAAQ,CAAEY,CAAD,IAAKA,CAAC,CAACC,MAAF,CAASF,IAAI,CAACG,OAAd,CAAN,CAAR;MACAN,UAAU,CAACH,IAAI,GAACM,IAAI,CAACI,WAAX,CAAV;MACAb,YAAY,CAAC,KAAD,CAAZ;IACC,CALD;EAMH,CARQ,EAQP,CAACC,KAAD,EAAOE,IAAP,CARO,CAAT;EAeA,oBAAO,QAAC,cAAD;IACP,UAAU,EAAEN,KAAK,CAACiB,MADX;IAEP,IAAI,EAAE,MAAMV,OAAO,CAAEW,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAFZ;IAGP,OAAO,EAAEV,OAHF;IAIP,MAAM,eAAE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAJD;IAAA,uBAKG;MAAK,SAAS,EAAEf,KAAK,CAACM,IAAtB;MAAA,UACGC,KAAK,CAACmB,GAAN,CACE,CAACC,IAAD,EAAMC,GAAN,KACC;QACE,oBAAO,QAAC,IAAD;UAAgB,IAAI,EAAED;QAAtB,GAAWC,GAAX;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAJJ;IADH;MAAA;MAAA;MAAA;IAAA;EALH;IAAA;IAAA;IAAA;EAAA,QAAP;AAsBD;;GAnDetB,I;UAMAH,Q;;;KANAG,I"},"metadata":{},"sourceType":"module"}